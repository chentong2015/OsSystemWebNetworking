1. 计算机的基本工作原理 ? 分时抢先，CPU多核高速处理
   > 程序的静态
   > 程序的动态 runtime 运行时
2. 程序不和跟硬件交互，而是通过操作系统去管理
   OS for PC: windows, MacOS, linux
   OS for Server: 服务器组成集群 Linux, Unix/Fedora, Windows Server
3. 多核计算机：分布是运算，是程序占满核，充分利用计算机的能力
   > 进程: 程序运行起来之后，加载到内存中，正在运行的东西
   > 病毒：运行必须占CPU 占内存，自主进程，或者嵌入到被的进程中
   > 内存泄漏: 内存只增不减，内存没有被清理
4. IO操作：内存和硬盘之间的沟通 (带宽瓶颈)
          SSD固态硬盘(Solid-state drive)比机械硬盘的IO沟通快, 带宽大
5. Thread线程: 至少有一个主线程 (可开启和关闭分支线程)
6. System types / CPU 一次处理数据的位数 x64 bits / 向32bits兼容; x86 -> 32 bits
7. 1G = 1024M = 1024 * 1024KB = 1024 * 1024 * 1024B  (8 bits = 1 Byte)

什么是程序? 什么是进程Process?
  程序存在硬盘中，执行的时候，必须加载到内存中
  代码编译出来的结果 objective 目标代码: C/C++编译.exe可以直接执行，Java需要交给虚拟机执行
     Link 需要组合在一起的代码
     > 安装时候安装的多个模块和库(默认)
     > 自定义开发编译出来的
     > 扩展和添加类库/模块

SDK: software development kit 软件开发包，包含类库/编辑器/编译器
     JDK, windows SDK, .Net Framework, QT SDK (for Linux)
级别: ME for mobile, SE 标准版,
     EE for web 标准(规范的集合) 维护和推进问题 -> Spring 框架

IDE: 编程 编译 调试 > 部署(服务器上一般没有IDE环境，通过终端执行)
3期: 编辑期，编译器期，运行(调试)期
     plain text 纯文本; 什么是非代码
     编译错误
     调试可能出现在SDK中 | debug调试, 会有调试器在程序中监视(断点) > 虫子按钮 (光的吸引，程序有小虫子，需要调试)
3器: 编辑器, 编译器, 调试器
