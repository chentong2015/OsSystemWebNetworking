#user  nobody;

# 定义Worker进程的数量
# auto表示和服务器CPU内核的数量一致
worker_processes  5;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

# 定义服务器和客户之间网络连接的一些配置
events {
    worker_connections  1024; # 指定每个Worker进程可以同时接收多少个连接
}

http {
    # 将文件包含进来，通过文件中定义的映射来判断类型
    include       mime.types; 
	
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
	
	# 定义反向代理的配置, backend名称可自定义
	# 默认是以轮询的方式进行代理
	# 使用weight权重来定义负载均衡
	upstream backend {
	   ip_hash;  # 根据客户端的ip地址hash，同一个ip请求会被分配到同一个server上
	   server 127.0.0.1:8080 weight=3;
	   server 127.0.0.1:8081 weight=1;
	   server 127.0.0.1:8082 weight=2;
	}

    #gzip  on;

	# Server虚拟主机(virtual host), 通过server_name来指定虚拟主机的域名
	# 访问定义的域名便会指定Server块中的配置
    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
		
		# 使所有以/app开头的请求都被代理到upstream中
		# 在客户段访问localhost/app时会自动按照顺序访问指定的server地址
		location /app {
		    proxy_pass http://backend
		}

		# 匹配页面的根目录
        location / {
            root   html;  # 根目录下的文件夹，是相对路径
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    # server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    # }


    # HTTPS server
    #
    # server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    # }
}
