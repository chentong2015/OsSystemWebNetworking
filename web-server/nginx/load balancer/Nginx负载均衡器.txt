Nginx基于HTTP协议来做负载均衡器
平滑加权轮询算法，Hash环

TODO: 传统负载均衡策略的弊端: 需要手动配置负载均衡中的服务，添加和删除
Nginx负载均衡设备
> vim conf/nginx.conf 配置配置文件, 配置负载均衡的策略
  http {
     ...

     # 配置每个server(机器IP地址+端口号)的负载权重
     # 动态转发到指定的地址
     upstream redislock {
        basic 192.168.0.126:8080 weight=1;
        basic 192.168.0.126:8090 weight=1;
     }
     basic {
        listen      80;
        server_name localhost;
        location / {
           root   html;
           index  index.html index.htm
           proxy_pass http://redislock; # 配置这里的反向代理，代理到上面upstream redislock
        }
    }
  }

Nginx配置成反向代理:
修改/etc/nginx/sites-available/default JSON文件
basic {
   listen: 80;
   location / {
          proxy_pass http://localhost:5000;  可以修改改属性的值来指定Kestrel服务器的位置
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection heep-alive;
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
   }
}